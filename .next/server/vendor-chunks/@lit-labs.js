"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@lit-labs";
exports.ids = ["vendor-chunks/@lit-labs"];
exports.modules = {

/***/ "(ssr)/./node_modules/@lit-labs/ssr-dom-shim/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@lit-labs/ssr-dom-shim/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CustomElementRegistry: () => (/* binding */ CustomElementRegistryShimWithRealType),\n/* harmony export */   Element: () => (/* binding */ ElementShimWithRealType),\n/* harmony export */   ElementInternals: () => (/* reexport safe */ _lib_element_internals_js__WEBPACK_IMPORTED_MODULE_0__.ElementInternals),\n/* harmony export */   HTMLElement: () => (/* binding */ HTMLElementShimWithRealType),\n/* harmony export */   HYDRATE_INTERNALS_ATTR_PREFIX: () => (/* reexport safe */ _lib_element_internals_js__WEBPACK_IMPORTED_MODULE_0__.HYDRATE_INTERNALS_ATTR_PREFIX),\n/* harmony export */   ariaMixinAttributes: () => (/* reexport safe */ _lib_element_internals_js__WEBPACK_IMPORTED_MODULE_0__.ariaMixinAttributes),\n/* harmony export */   customElements: () => (/* binding */ customElements)\n/* harmony export */ });\n/* harmony import */ var _lib_element_internals_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/element-internals.js */ \"(ssr)/./node_modules/@lit-labs/ssr-dom-shim/lib/element-internals.js\");\n/**\n * @license\n * Copyright 2019 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ \n\nconst attributes = new WeakMap();\nconst attributesForElement = (element)=>{\n    let attrs = attributes.get(element);\n    if (attrs === undefined) {\n        attributes.set(element, attrs = new Map());\n    }\n    return attrs;\n};\n// The typings around the exports below are a little funky:\n//\n// 1. We want the `name` of the shim classes to match the real ones at runtime,\n//    hence e.g. `class Element`.\n// 2. We can't shadow the global types with a simple class declaration, because\n//    then we can't reference the global types for casting, hence e.g.\n//    `const ElementShim = class Element`.\n// 3. We want to export the classes typed as the real ones, hence e.g.\n//    `const ElementShimWithRealType = ElementShim as object as typeof Element;`.\n// 4. We want the exported names to match the real ones, hence e.g.\n//    `export {ElementShimWithRealType as Element}`.\nconst ElementShim = class Element {\n    constructor(){\n        this.__shadowRootMode = null;\n        this.__shadowRoot = null;\n        this.__internals = null;\n    }\n    get attributes() {\n        return Array.from(attributesForElement(this)).map(([name, value])=>({\n                name,\n                value\n            }));\n    }\n    get shadowRoot() {\n        if (this.__shadowRootMode === \"closed\") {\n            return null;\n        }\n        return this.__shadowRoot;\n    }\n    setAttribute(name, value) {\n        // Emulate browser behavior that silently casts all values to string. E.g.\n        // `42` becomes `\"42\"` and `{}` becomes `\"[object Object]\"\"`.\n        attributesForElement(this).set(name, String(value));\n    }\n    removeAttribute(name) {\n        attributesForElement(this).delete(name);\n    }\n    hasAttribute(name) {\n        return attributesForElement(this).has(name);\n    }\n    attachShadow(init) {\n        const shadowRoot = {\n            host: this\n        };\n        this.__shadowRootMode = init.mode;\n        if (init && init.mode === \"open\") {\n            this.__shadowRoot = shadowRoot;\n        }\n        return shadowRoot;\n    }\n    attachInternals() {\n        if (this.__internals !== null) {\n            throw new Error(`Failed to execute 'attachInternals' on 'HTMLElement': ` + `ElementInternals for the specified element was already attached.`);\n        }\n        const internals = new _lib_element_internals_js__WEBPACK_IMPORTED_MODULE_0__.ElementInternalsShim(this);\n        this.__internals = internals;\n        return internals;\n    }\n    getAttribute(name) {\n        const value = attributesForElement(this).get(name);\n        return value ?? null;\n    }\n};\nconst ElementShimWithRealType = ElementShim;\n\nconst HTMLElementShim = class HTMLElement extends ElementShim {\n};\nconst HTMLElementShimWithRealType = HTMLElementShim;\n\nconst CustomElementRegistryShim = class CustomElementRegistry {\n    constructor(){\n        this.__definitions = new Map();\n    }\n    define(name, ctor) {\n        if (this.__definitions.has(name)) {\n            if (true) {\n                console.warn(`'CustomElementRegistry' already has \"${name}\" defined. ` + `This may have been caused by live reload or hot module ` + `replacement in which case it can be safely ignored.\\n` + `Make sure to test your application with a production build as ` + `repeat registrations will throw in production.`);\n            } else {}\n        }\n        this.__definitions.set(name, {\n            ctor,\n            // Note it's important we read `observedAttributes` in case it is a getter\n            // with side-effects, as is the case in Lit, where it triggers class\n            // finalization.\n            //\n            // TODO(aomarks) To be spec compliant, we should also capture the\n            // registration-time lifecycle methods like `connectedCallback`. For them\n            // to be actually accessible to e.g. the Lit SSR element renderer, though,\n            // we'd need to introduce a new API for accessing them (since `get` only\n            // returns the constructor).\n            observedAttributes: ctor.observedAttributes ?? []\n        });\n    }\n    get(name) {\n        const definition = this.__definitions.get(name);\n        return definition?.ctor;\n    }\n};\nconst CustomElementRegistryShimWithRealType = CustomElementRegistryShim;\n\nconst customElements = new CustomElementRegistryShimWithRealType(); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@lit-labs/ssr-dom-shim/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@lit-labs/ssr-dom-shim/lib/element-internals.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@lit-labs/ssr-dom-shim/lib/element-internals.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ElementInternals: () => (/* binding */ ElementInternalsShimWithRealType),\n/* harmony export */   ElementInternalsShim: () => (/* binding */ ElementInternalsShim),\n/* harmony export */   HYDRATE_INTERNALS_ATTR_PREFIX: () => (/* binding */ HYDRATE_INTERNALS_ATTR_PREFIX),\n/* harmony export */   ariaMixinAttributes: () => (/* binding */ ariaMixinAttributes)\n/* harmony export */ });\n/**\n * @license\n * Copyright 2023 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */ /**\n * Map of ARIAMixin properties to attributes\n */ const ariaMixinAttributes = {\n    ariaAtomic: \"aria-atomic\",\n    ariaAutoComplete: \"aria-autocomplete\",\n    ariaBraileLabel: \"aria-brailelabel\",\n    ariaBraileRoleDescription: \"aria-braileroledescription\",\n    ariaBusy: \"aria-busy\",\n    ariaChecked: \"aria-checked\",\n    ariaColCount: \"aria-colcount\",\n    ariaColIndex: \"aria-colindex\",\n    ariaColSpan: \"aria-colspan\",\n    ariaCurrent: \"aria-current\",\n    ariaDescription: \"aria-description\",\n    ariaDisabled: \"aria-disabled\",\n    ariaExpanded: \"aria-expanded\",\n    ariaHasPopup: \"aria-haspopup\",\n    ariaHidden: \"aria-hidden\",\n    ariaInvalid: \"aria-invalid\",\n    ariaKeyShortcuts: \"aria-keyshortcuts\",\n    ariaLabel: \"aria-label\",\n    ariaLevel: \"aria-level\",\n    ariaLive: \"aria-live\",\n    ariaModal: \"aria-modal\",\n    ariaMultiLine: \"aria-multiline\",\n    ariaMultiSelectable: \"aria-multiselectable\",\n    ariaOrientation: \"aria-orientation\",\n    ariaPlaceholder: \"aria-placeholder\",\n    ariaPosInSet: \"aria-posinset\",\n    ariaPressed: \"aria-pressed\",\n    ariaReadOnly: \"aria-readonly\",\n    ariaRequired: \"aria-required\",\n    ariaRoleDescription: \"aria-roledescription\",\n    ariaRowCount: \"aria-rowcount\",\n    ariaRowIndex: \"aria-rowindex\",\n    ariaRowSpan: \"aria-rowspan\",\n    ariaSelected: \"aria-selected\",\n    ariaSetSize: \"aria-setsize\",\n    ariaSort: \"aria-sort\",\n    ariaValueMax: \"aria-valuemax\",\n    ariaValueMin: \"aria-valuemin\",\n    ariaValueNow: \"aria-valuenow\",\n    ariaValueText: \"aria-valuetext\",\n    role: \"role\"\n};\n// Shim the global element internals object\n// Methods should be fine as noops and properties can generally\n// be while on the server.\nconst ElementInternalsShim = class ElementInternals {\n    get shadowRoot() {\n        // Grab the shadow root instance from the Element shim\n        // to ensure that the shadow root is always available\n        // to the internals instance even if the mode is 'closed'\n        return this.__host.__shadowRoot;\n    }\n    constructor(_host){\n        this.ariaAtomic = \"\";\n        this.ariaAutoComplete = \"\";\n        this.ariaBraileLabel = \"\";\n        this.ariaBraileRoleDescription = \"\";\n        this.ariaBusy = \"\";\n        this.ariaChecked = \"\";\n        this.ariaColCount = \"\";\n        this.ariaColIndex = \"\";\n        this.ariaColSpan = \"\";\n        this.ariaCurrent = \"\";\n        this.ariaDescription = \"\";\n        this.ariaDisabled = \"\";\n        this.ariaExpanded = \"\";\n        this.ariaHasPopup = \"\";\n        this.ariaHidden = \"\";\n        this.ariaInvalid = \"\";\n        this.ariaKeyShortcuts = \"\";\n        this.ariaLabel = \"\";\n        this.ariaLevel = \"\";\n        this.ariaLive = \"\";\n        this.ariaModal = \"\";\n        this.ariaMultiLine = \"\";\n        this.ariaMultiSelectable = \"\";\n        this.ariaOrientation = \"\";\n        this.ariaPlaceholder = \"\";\n        this.ariaPosInSet = \"\";\n        this.ariaPressed = \"\";\n        this.ariaReadOnly = \"\";\n        this.ariaRequired = \"\";\n        this.ariaRoleDescription = \"\";\n        this.ariaRowCount = \"\";\n        this.ariaRowIndex = \"\";\n        this.ariaRowSpan = \"\";\n        this.ariaSelected = \"\";\n        this.ariaSetSize = \"\";\n        this.ariaSort = \"\";\n        this.ariaValueMax = \"\";\n        this.ariaValueMin = \"\";\n        this.ariaValueNow = \"\";\n        this.ariaValueText = \"\";\n        this.role = \"\";\n        this.form = null;\n        this.labels = [];\n        this.states = new Set();\n        this.validationMessage = \"\";\n        this.validity = {};\n        this.willValidate = true;\n        this.__host = _host;\n    }\n    checkValidity() {\n        // TODO(augustjk) Consider actually implementing logic.\n        // See https://github.com/lit/lit/issues/3740\n        console.warn(\"`ElementInternals.checkValidity()` was called on the server.\" + \"This method always returns true.\");\n        return true;\n    }\n    reportValidity() {\n        return true;\n    }\n    setFormValue() {}\n    setValidity() {}\n};\nconst ElementInternalsShimWithRealType = ElementInternalsShim;\n\nconst HYDRATE_INTERNALS_ATTR_PREFIX = \"hydrate-internals-\"; //# sourceMappingURL=element-internals.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@lit-labs/ssr-dom-shim/lib/element-internals.js\n");

/***/ })

};
;